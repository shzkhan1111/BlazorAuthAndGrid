@*Data passig in
    of generic type
*@

@typeparam TItem

<table class="table is-fullwidth">
    <thead>
        <tr>
            @if (Columns == null || Columns.Count <= 0)
            {
                //Create the Header with reflection
            }
            else
            {
                //create the header based on Col

                @foreach (var col in Columns)
                {
                    @if (col.alignment != Alignment.NotSet)
                    {
                        <th>@col.Caption</th>
                    }
                    else
                    {

                        <th>@col.Caption</th>

                    }
                    @*<th>@col.Caption</th>*@
                }
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in DataItems)//employee list
        {
            <tr>
                @foreach (var column in Columns)//column defination
                {


                    @if (column.alignment != Alignment.NotSet)
                    {
                        <td align="@column.alignment.ToString().ToLower()">
                            @typeof(TItem).GetProperty(column.DataFeild).GetValue(item)
                            ::
                            <small>@item</small>
                        </td>
                    }
                    else
                    {
                        <td>
                            @typeof(TItem).GetProperty(column.DataFeild).GetValue(item)
                            ::
                            <small>@item</small>
                        </td>
                    }


                }
            </tr>
        }
    </tbody>
</table>

@code {
    //generic type to have a list of Items
    [Parameter]
    public List<TItem> DataItems { get; set; }

    //define configuration Indicate what kind of Datafeild in T item
    //Create a configuration Folder

    //list of cols as params
    // in import add using BlazorAuthTut.Configuration
    [Parameter]
    public List<ColumnDefination> Columns { get; set; }
}
